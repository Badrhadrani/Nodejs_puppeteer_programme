import { Headers, Request, RequestMethod, URLSearchParams } from '@angular/http';
export declare class RequestService {
    private readonly _AUTHORIZATION;
    private readonly _BASIC;
    private readonly _API;
    private _url;
    private _authData;
    constructor();
    search(resource: string, params: APIParameters): Request;
    resource(resource: string, id: string, id_language: string): Request;
    request(url: string, method: RequestMethod, params?: APIParameters, body?: any): Request;
    getAuthData(data: string): string;
    apiConfigurationRequest(url: string, key: string): Request;
    setXHRHeaders(request: XMLHttpRequest): void;
    resourceUrl(resource: string, id?: string): string;
    private _headers;
    readonly headers: Headers;
    private getAuthHeaders(authData);
    private getRequest(url, method, params, responseType, body);
    private getAuthValue(authData);
    private buildUrl(parts);
    apiUrl(): string;
    readonly siteUrl: string;
    getResourceImageUrl(resource: string, id: string, id_image?: string): string;
    computeUrl(parts: string[]): string;
}
export declare enum APIParametersNames {
    display = 0,
    filter = 1,
    output_format = 2,
    language = 3,
    ps_method = 4,
}
export declare enum APIParametersValues {
    JSON = 0,
    XML = 1,
    full = 2,
    GET = 3,
    POST = 4,
    PUT = 5,
    DELETE = 6,
}
export declare class APIParameters extends URLSearchParams {
    static getOutputFormatPart(format?: APIParametersValues): string;
    constructor();
    private _outputFormat;
    outputFormat: APIParametersValues;
    private _display;
    display: string[] | APIParametersValues.full;
    private _id_language;
    id_language: string;
    filter(name: any, values: string[], separator?: string): void;
    private arrayValue(strings, separator);
}
